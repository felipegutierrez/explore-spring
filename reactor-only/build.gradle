plugins {
    id "java"
    id "jacoco"
    id "application"
    id "idea" // optional (to generate IntelliJ IDEA project files)
    id "io.freefair.lombok" version "5.3.0"
    id "com.palantir.docker" version "0.26.0" // Docker Gradle Plugin to build image
    id "com.palantir.docker-run" version "0.26.0" // Docker Gradle Plugin to run image
}

description = "reactor-only"
group = "com.github.felipegutierrez.explore.spring"
version = "0.1.0"
sourceCompatibility = "11"
mainClassName = "com.github.felipegutierrez.explore.MainClass"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "io.projectreactor:reactor-core:3.4.0"

    //webclient-dependencies
    implementation "org.springframework:spring-webflux:5.3.4"
    implementation "io.projectreactor.netty:reactor-netty:1.0.4"
    //jackson dependencies
    implementation "com.fasterxml.jackson.core:jackson-databind:2.11.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.1"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.11.1"
    implementation "com.fasterxml.jackson.core:jackson-core:2.11.1"

    //log - logback
    implementation "ch.qos.logback:logback-classic:1.2.3"

    //reactor-debug-agent
    implementation "io.projectreactor:reactor-tools:3.4.0"

    //testing
    testImplementation "io.projectreactor:reactor-test:3.4.0"
    testImplementation "org.junit.jupiter:junit-jupiter:5.5.1"
    testImplementation "org.mockito:mockito-core:3.2.4"
    testImplementation "org.mockito:mockito-junit-jupiter:3.2.4"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.github.felipegutierrez.explore.MainClass'
        )
    }
}

docker.dependsOn(jar)
docker {
    dependsOn jar
    name "${project.name}:${project.version}"
    files 'build/libs/reactor-only-0.1.0.jar'
    // uri("${project.name}:".plus(version))
    copySpec.from("build").into("build")
    pull(true)
    setDockerfile(file("Dockerfile"))
    // tag 'DockerHub', "felipeogutierrez/reactor-only:${project.version}"
}

dockerRun {
    name "${project.name}"
    image "${project.name}:${project.version}"
    ports '8080:8080'
    arguments "-it"
    clean true
}
